# See: https://circleci.com/docs/sample-config/
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    machine:
      image: ubuntu-2204:2022.07.1
      docker_layer_caching: true

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Compile and run linter
          command: |
            sbt "scalafixAll --check; testAcceptance/scalafixAll --check"

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies--{{ checksum "build.sbt" }}

      - run:
          name: Run unit and integration tests
          command: cat /dev/null | sbt "test:test; it:test"

      - run:
          name: Publish service docker image
          command: |
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            sbt "service/docker:publish"

      - run:
          name: Run acceptance tests
          command: |
            mkdir -p tools/scripts/logs
            mkdir -p artifacts
            ./start-local.sh
            mv tools/scripts/logs/docker-compose.log artifacts/docker-compose.log
            mv tools/scripts/logs/sketch.log artifacts/sketch.log
            mv tools/scripts/logs/database.log artifacts/database.log
            sbt "testAcceptance/test"

      - store_artifacts:
          path: artifacts